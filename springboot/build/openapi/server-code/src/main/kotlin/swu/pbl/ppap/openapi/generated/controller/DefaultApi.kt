/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package swu.pbl.ppap.openapi.generated.controller

import swu.pbl.ppap.openapi.generated.model.AskQuestion401Response
import swu.pbl.ppap.openapi.generated.model.AskRequest
import swu.pbl.ppap.openapi.generated.model.AskResponse
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import javax.validation.Valid
import javax.validation.constraints.DecimalMax
import javax.validation.constraints.DecimalMin
import javax.validation.constraints.Email
import javax.validation.constraints.Max
import javax.validation.constraints.Min
import javax.validation.constraints.NotNull
import javax.validation.constraints.Pattern
import javax.validation.constraints.Size

import kotlin.collections.List
import kotlin.collections.Map

@Validated
@RequestMapping("\${api.base-path:}")
interface DefaultApi {

    @Operation(
        summary = "Ask a question to the chatbot",
        operationId = "askQuestion",
        description = "",
        responses = [
            ApiResponse(responseCode = "200", description = "Successfully retrieved answer", content = [Content(schema = Schema(implementation = AskResponse::class))]),
            ApiResponse(responseCode = "400", description = "Bad request"),
            ApiResponse(responseCode = "401", description = "Access token is missing or invalid", content = [Content(schema = Schema(implementation = AskQuestion401Response::class))])
        ],
        security = [ SecurityRequirement(name = "bearerAuth") ]
    )
    @RequestMapping(
            method = [RequestMethod.POST],
            value = ["/chat"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun askQuestion(@Parameter(description = "", required = true) @Valid @RequestBody askRequest: AskRequest): ResponseEntity<AskResponse> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
